class PrintEditionItem {
  constructor(name, releaseDate, pagesCount) {
    this.name = name;
    this.releaseDate = releaseDate;
    this.pagesCount = pagesCount;
    this.state = 100; // состояние по умолчанию
    this.type = null; // тип по умолчанию
  }

  fix() {
    this.state = Math.min(this.state * 1.5, 100); // увеличиваем состояние на 50% до 100
  }

  get state() {
    return this._state;
  }

  set state(value) {
    if (value < 0) {
      this._state = 0;
    } else if (value > 100) {
      this._state = 100;
    } else {
      this._state = value;
    }
  }
}

// Класс журнал
class Magazine extends PrintEditionItem {
  constructor(name, releaseDate, pagesCount) {
    super(name, releaseDate, pagesCount);
    this.type = "magazine";
  }
}

// Класс книга
class Book extends PrintEditionItem {
  constructor(author, name, releaseDate, pagesCount) {
    super(name, releaseDate, pagesCount);
    this.author = author;
    this.type = "book";
  }
}

// Классы, наследующие от Book
class NovelBook extends Book {
  constructor(author, name, releaseDate, pagesCount) {
    super(author, name, releaseDate, pagesCount);
    this.type = "novel";
  }
}

class FantasticBook extends Book {
  constructor(author, name, releaseDate, pagesCount) {
    super(author, name, releaseDate, pagesCount);
    this.type = "fantastic";
  }
}

class DetectiveBook extends Book {
  constructor(author, name, releaseDate, pagesCount) {
    super(author, name, releaseDate, pagesCount);
    this.type = "detective";
  }
}

// Класс библиотеки
class Library {
  constructor(name) {
    this.name = name;
    this.books = []; // массив для хранения книг
  }

  addBook(book) {
    if (book.state > 30) {
      this.books.push(book); // добавляем книгу в библиотеку
    }
  }

  findBookBy(type, value) {
    return this.books.find(book => book[type] === value) || null; // ищем книгу по заданному критерию
  }

  giveBookByName(bookName) {
    const bookIndex = this.books.findIndex(book => book.name === bookName); // находим индекс книги
    if (bookIndex !== -1) {
      return this.books.splice(bookIndex, 1)[0]; // удаляем книгу из библиотеки и возвращаем её
    }
    return null; // если книга не найдена
  }
}
